---
- name: "Scale to {{ ec2_instance_exact_count }} instances"
  local_action:
    module: ec2
    assign_public_ip: "{{ ec2_instance_assign_public_ip }}"
    wait: "{{ ec2_instance_wait }}"
    region: "{{ ec2_instance_region }}"
    vpc_subnet_id: "{{ ec2_instance_vpc_subnet_id }}"
    group: "{{ ec2_instance_group_name }}"
    exact_count: "{{ ec2_instance_exact_count }}"
    image: "{{ ec2_instance_image | default( (return_ec2_ami_find.results | first).ami_id ) }}"
    instance_type: "{{ ec2_instance_type }}"
    key_name: "{{ ec2_instance_key_name }}"
    instance_tags: "{{ ec2_instance_tags }}"
    count_tag: "{{ ec2_instance_count_tag }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_instance_boot_disk_volume_size }}"
        delete_on_termination: "{{ ec2_instance_boot_disk_delete_on_termination }}"
  register: return_ec2_instance
  tags:
    - ec2_instance

- debug: var=return_ec2_instance
  when: ec2_instance_debug
  tags:
    - ec2_instance

- name: Refresh inventory
  meta: refresh_inventory
  when:
    - test is not defined
  tags:
    - ec2_instance
