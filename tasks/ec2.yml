---
- fail:
  msg: |
    You need to specify ec2_cloud_instance_os_type.
    This variable is used to group servers based on O.S.
  when: ec2_cloud_instance_os_type is not defined

- name: "Scale to [ {{ ec2_cloud_instance_exact_count }} ] instances"
  local_action:
    module: ec2
    assign_public_ip: "{{ ec2_cloud_instance_assign_public_ip }}"
    wait: "{{ ec2_cloud_instance_wait }}"
    region: "{{ ec2_cloud_instance_region }}"
    vpc_subnet_id: "{{ ec2_cloud_instance_vpc_subnet_id }}"
    group: "{{ ec2_cloud_instance_group_name }}"
    exact_count: "{{ ec2_cloud_instance_exact_count }}"
    image: "{{ ec2_cloud_ami_id }}"
    instance_type: "{{ ec2_cloud_instance_type }}"
    key_name: "{{ ec2_cloud_instance_key_name }}"
    instance_tags: "{{ ec2_cloud_instance_tags }}"
    count_tag: "{{ ec2_cloud_instance_count_tag }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_cloud_instance_boot_disk_volume_size }}"
        delete_on_termination: "{{ ec2_cloud_instance_boot_disk_delete_on_termination }}"
  register: return_ec2_cloud_instance

- debug: var=return_ec2_cloud_instance
  when: ec2_cloud_instance_debug

- name: "Add AWS hosts to inventory memory groups"
  add_host:
    name: "{{ item.public_ip }}"
    groups:
      - "{{ ec2_cloud_instance_os_type }}"
      - "{{ ec2_cloud_instance_tags.Name }}"
      - "{{ ec2_cloud_instance_tags.Class }}"
      - "{{ ec2_cloud_instance_tags.Version }}"
      - "{{ ec2_cloud_instance_tags.Environment }}"
  with_items: "{{ return_ec2_cloud_instance.instances }}"

  - name: "Wait for SSH"
    wait_for:
      host: "{{ item.public_ip }}"
      port: 22
      delay: 60
      timeout: 320
      state: started
    with_items: "{{ return_ec2_cloud_instance.instances }}"
